version: '3.7'
services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    networks: ['flownetwork']
    restart: unless-stopped
    ports:
      - "9092:9092"   # external clients
      - "29092:29092" # internal docker clients
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093   # ðŸ”‘ required in KRaft

      # Required unique cluster ID (use `kafka-storage random-uuid` to generate one if needed)
      CLUSTER_ID: fD7sd9jxQxeYtL2h8JpQwA

      # Single-node friendly configs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - kafka-data2:/var/lib/kafka/data

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    networks:
      - flownetwork   

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3005:3000"
    environment:
      - GF_INSTALL_PLUGINS=vertamedia-clickhouse-datasource
    depends_on:
      - clickhouse
    networks:
      - flownetwork

  kafka-clickhouse:
    image: kafka-clickhouse:latest
    container_name: kafka-clickhouse
    depends_on:
    - clickhouse
    - kafka
    environment:
      CLICKHOUSE_DSN: clickhouse:9000
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: ipfix-topic
    networks:
    - flownetwork
    restart: unless-stopped


  ipfix-generator:
    image: ghcr.io/jfwenisch/ipfix-generator:latest
    container_name: ipfix-generator
    ports:
      - "8085:8080"
    networks:
      - flownetwork
    restart: unless-stopped


  ipfixcol2:
    image: ipfixcol2:latest
    container_name: ipfixcol2
    ports:
      - "4739:4739"
      - "9995:9995"
    
    depends_on:
      - kafka
      - clickhouse
    networks:
      - flownetwork

volumes:
  kafka-data2:
networks:
  flownetwork:
    driver: bridge
